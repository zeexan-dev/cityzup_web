"""Added created_at column to Equivalent table

Revision ID: 3199284142c4
Revises: d221373e571b
Create Date: 2025-02-26 13:53:12.383140

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "3199284142c4"
down_revision = "d221373e571b"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("alert", schema=None) as batch_op:
        batch_op.alter_column(
            "a_created_at", existing_type=sa.DATETIME(), nullable=True
        )

    with op.batch_alter_table("equivalent", schema=None) as batch_op:
        batch_op.add_column(sa.Column("eq_created_at", sa.DateTime(), nullable=True))

    # Set default value for existing records
    op.execute("UPDATE equivalent SET eq_created_at = CURRENT_TIMESTAMP")

    # Alter column to be non-nullable
    with op.batch_alter_table("equivalent", schema=None) as batch_op:
        batch_op.alter_column("eq_created_at", nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("equivalent", schema=None) as batch_op:
        batch_op.drop_column("eq_created_at")

    with op.batch_alter_table("alert", schema=None) as batch_op:
        batch_op.alter_column(
            "a_created_at", existing_type=sa.DATETIME(), nullable=False
        )

    # ### end Alembic commands ###
