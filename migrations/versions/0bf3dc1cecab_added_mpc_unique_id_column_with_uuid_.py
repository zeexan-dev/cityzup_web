"""Added mpc_unique_id column with UUID default

Revision ID: 0bf3dc1cecab
Revises: 6597d02c847d
Create Date: 2025-03-22 16:33:40.644745

"""
from alembic import op
import sqlalchemy as sa
from alembic import op
import uuid
from sqlalchemy.sql import text


# revision identifiers, used by Alembic.
revision = '0bf3dc1cecab'
down_revision = '6597d02c847d'
branch_labels = None
depends_on = None


def upgrade():
    # Get a connection to the database
    conn = op.get_bind()

   # Assign a UUID to existing rows where mpc_unique_id is NULL
    result = conn.execute(text("SELECT mpc_id FROM mission_paparazzi_completed WHERE mpc_unique_id IS NULL"))

    for row in result.fetchall():
        conn.execute(
            text("UPDATE mission_paparazzi_completed SET mpc_unique_id = :uuid WHERE mpc_id = :mpc_id"),
            {"uuid": str(uuid.uuid4()), "mpc_id": row[0]}
        )

    with op.batch_alter_table('mission_paparazzi_completed', schema=None) as batch_op:
        batch_op.alter_column('mpc_unique_id', existing_type=sa.String(36), nullable=False)
        batch_op.create_unique_constraint("uq_mission_paparazzi_mpc_unique_id", ['mpc_unique_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('mission_paparazzi_completed', schema=None) as batch_op:
        batch_op.drop_constraint("uq_mission_paparazzi_mpc_unique_id", type_='unique')
        batch_op.alter_column('mpc_unique_id',
               existing_type=sa.VARCHAR(length=36),
               nullable=True)

    # ### end Alembic commands ###
